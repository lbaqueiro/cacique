# Logfile created on Thu Feb 03 22:34:07 -0500 2011 by /
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Timeout::Error: IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Rails::Info>
#<NameError: uninitialized constant HoptoadNotifier>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Access denied for user 'cacique'@'localhost' (using password: YES)>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Access denied for user 'cacique'@'localhost' (using password: YES)>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Mysql::Error: Too many connections>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Timeout::Error: IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<MissingSourceFile: no such file to load -- jira4r>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<MissingSourceFile: no such file to load -- jira4r>
#<MissingSourceFile: no such file to load -- xmlscan/scanner>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (113)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (113)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5c3731f7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f71bd11fce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7effaac0a7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f85f1a117a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f06e09886c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f186f0a9cc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f0d5a777ce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f1ee3322b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9f73c3ab58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4f658627a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd5341d0b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f716f9f37a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5eef3dab58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd5a2308278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f13cef95cc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ffbcad41cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd5b5b9ac98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3e099f17a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f03602c3c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe3ab4f97a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f350b6ce1d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fef345bd800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f86413e07a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb091c491d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f42ed1615e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f2a8ddcd278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcf93aa1800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f70d4606cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa191b68278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7f958667a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa6d6e11cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f901de72638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f003dc42b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f99fe29d318>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ffacdbbcb58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3b86556b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb4b8273278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe1d9e7bce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fdca1841cc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff501a69278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbac774ac00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7139eed7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbdcea56278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f1cd5649800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f0e95679800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f1e11184828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff3800697a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f2133a43cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f88a1374638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff78e886278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5fc4f78278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fed0f340b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f54f431ec00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f6ca8299b60>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f98b5828cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbd50426638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f46a90575e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f09c1487cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f47bb4e9800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc891824c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f6e8a01ac98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcd960567a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f46394dc7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa1ec6ca6c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe18df8ac98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f309e40bcf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcf6dc2f800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f43be373800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5b4b7cf800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa1ffc16800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc8c3f10278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc173aecb58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f0e7f099cc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe43d66dcc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb1951e93a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f371073a638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff7b791b5e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa56c2be6c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcad68ab800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f22d621acc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9d0e89c6c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7b14b32c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe51d3c2828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f962677d3a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbe0003dc50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd591c36c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fba9ba9a828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa7d57df800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ffc1ae7ac98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe9c0ce5278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4885fd3c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe2963167a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fddc84f17a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9b2fe6ec00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f0e567b2828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f70482be278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f745fdd9c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe799e85278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbabc97a828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe7da002278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3f504f86c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f8e3f763278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f32ce86eb58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc884946278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f102b11a278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3762814cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f8fbbad2828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7feedf0686c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f28e9691b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7392f46638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f45f5d36278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcdc7976c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f169cf80638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb5ca21a278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f0c48359cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbbb167d800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f6dc35b17a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff4143fe278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9ae53d0c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe5a5b01278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc60ad647a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f6b960d5800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd68fc14c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbde041dcf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9fb93f4278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa6c53f0c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f8dec806278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f78df281ce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9151a35ce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fba8d47c828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcfa87713a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7a5ce6c7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fdaafd58b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcaadefc278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f56842eccc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb5f9e347a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb0e817acc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9628a5ec98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc1a77c2278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f897f20ac00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb055e33c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4b38753cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd3d686b800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f563564ccc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f1c06426cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff618a7cb58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb0d777b1d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb686389cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa2020edc50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f6ee21f9cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f1932de4cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4f2bfcc7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd1df9287a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f59f81d0278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f956dd3c638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- spawn>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<SeleniumCommandError: /usr/lib/ruby/gems/1.8/gems/Selenium-1.1.14/lib/selenium/openqa/selenium.rb:173:in `do_command': Failed to start new browser session: Error while launching browser>
#<SeleniumCommandError: /usr/lib/ruby/gems/1.8/gems/Selenium-1.1.14/lib/selenium/openqa/selenium.rb:173:in `do_command': Failed to start new browser session: Error while launching browser>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (113)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (113)>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - end of file reached>
#<EOFError: end of file reached>
#<EOFError: end of file reached>
#<MemCache::MemCacheError: end of file reached>
#<ActiveRecord::StatementInvalid: Mysql::Error: MySQL server has gone away: SELECT max(`executions`.id) AS max_id, circuit_id,case_template_id AS circuit_id_case_template_id FROM `executions` WHERE ((`executions`.`suite_execution_id` = 60875))  GROUP BY circuit_id,case_template_id >
#<Mysql::Error: MySQL server has gone away>
#<MemCache::MemCacheError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<IndexError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<MemCache::MemCacheError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<IndexError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<ActiveRecord::StatementInvalid: Mysql::Error: MySQL server has gone away: SELECT * FROM `user_functions` >
#<Mysql::Error: MySQL server has gone away>
#<MemCache::MemCacheError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<IndexError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<MemCache::MemCacheError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<IndexError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<MemCache::MemCacheError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<IndexError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<ActiveRecord::StatementInvalid: Mysql::Error: MySQL server has gone away: SELECT * FROM `user_functions` >
#<Mysql::Error: MySQL server has gone away>
#<MemCache::MemCacheError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<IndexError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<MemCache::MemCacheError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<IndexError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<MemCache::MemCacheError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<IndexError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<MemCache::MemCacheError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<IndexError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<ActiveRecord::StatementInvalid: Mysql::Error: MySQL server has gone away: SELECT * FROM `user_functions` >
#<Mysql::Error: MySQL server has gone away>
#<MemCache::MemCacheError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<IndexError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<MemCache::MemCacheError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<IndexError: No connection to server (10.4.0.30:11211 DEAD (Timeout::Error: execution expired), will retry at Fri Mar 18 15:13:30 -0300 2011)>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe6b043c9e0>: execution expired>
#<EOFError: end of file reached>
#<EOFError: end of file reached>
#<MemCache::MemCacheError: end of file reached>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<MissingSourceFile: no such file to load -- jira4r>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<EOFError: end of file reached>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- rails>
#<ArgumentError: couldn't find HOME environment -- expanding `~'>
#<MissingSourceFile: no such file to load -- commonwatir>
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- rails>
#<ArgumentError: couldn't find HOME environment -- expanding `~'>
#<MissingSourceFile: no such file to load -- commonwatir>
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- rails>
#<ArgumentError: couldn't find HOME environment -- expanding `~'>
#<MissingSourceFile: no such file to load -- commonwatir>
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- rails>
#<ArgumentError: couldn't find HOME environment -- expanding `~'>
#<MissingSourceFile: no such file to load -- commonwatir>
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- rails>
#<ArgumentError: couldn't find HOME environment -- expanding `~'>
#<MissingSourceFile: no such file to load -- commonwatir>
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
