# Logfile created on Thu Feb 03 22:34:07 -0500 2011 by /
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Timeout::Error: IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Rails::Info>
#<NameError: uninitialized constant HoptoadNotifier>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Access denied for user 'cacique'@'localhost' (using password: YES)>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Access denied for user 'cacique'@'localhost' (using password: YES)>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<SeleniumCommandError: ERROR Server Exception: sessionId 6dcb6fb5c175458da35ff3c74c4f525f doesn't exist; perhaps this session was already stopped?>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- spawn>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<MissingSourceFile: no such file to load -- jira4r>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- xmlscan/scanner>
#<MissingSourceFile: no such file to load -- jira4r>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (113)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (113)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f820c5c7cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fadf0147800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc6d2c28828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f2136888278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4d7d374278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbd83e69b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f6a741b2c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4437b2e828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f424e3867a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc4125cf278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc9050f5cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7ac13531d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5577566c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f298c44c1d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fba96ecd3a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f894d4081d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f8bae2ce1d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7b8e207b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f799ebd8278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff7e7440278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff633534b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f99fb86c828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd0645c61d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb5a6f61ce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7febb2a80638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f35f0396cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fee5e697b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3c03804828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc27fdacc00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f749f7c0c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f164f4abcf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb2fc2edcc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7bf4bddb80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f2828cb3c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f650f80c7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5462232c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4c8988cc00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3aaf035c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff08984b3a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f2f0368b800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc2271066c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbd3c8635e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc8e471f278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcfa9834638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9ed7187ce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3062049cc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f11c39a07a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f934d1b0c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f65497d7cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9eccaf9c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3a12933cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd77cd93b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe92edb3c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7efef54e3b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f04af165cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f570441a278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f0a77895278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9b82c817a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa929ec0cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f866be1ac00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f64a76cbc50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f2f868c07a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc0bd2d3b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ffd93bb47a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f33f2d31800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f8f91242c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f60b6fca6c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb4ea141800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb817ebecc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc44e2ebc50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3694020c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fed49f826c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f461dca46c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f09b5ea2278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4f44699278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9e75f83cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fad57a4cc00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f0e665b91d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3e6a341cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f1b07d27c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff1c940a638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4a259e0c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f34d2936828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9b89ebe638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc391ae77a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcb142ec7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f8388b997a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f18b7973b60>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f95d71b8c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd3f2fc06c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7bd2042c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbe10d8cc98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f8aeed89c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe4afdbcc98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd656aa1cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb7e0ec8cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc1241c33a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc3e6bd1800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3dea6ebcf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd44a3acc00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fce05ae0828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa86849b5e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe7b417fb80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcbc2c25c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7c20fb3800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f04d46e07a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc5dab69cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe655f2d3a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7c9585ac00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f29b5a54278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3b9d9791d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd8a8ce4c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7342a14c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd49fef4c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f2a92d5f5e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5b90ca97a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe9a9b79b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f17c5d83cc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe2b65b75e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4d106615e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc14bc5bc50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7206efb3a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f64f3c42638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fad5d8c46c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff8b5d61b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff96e228638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa777882b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc59b4b4cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5789839b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f198cd5bb80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f8ae5bfc6c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f07c42b46c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc8b1f54638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fba483e0828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f403f149cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f90c48d9800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb8835c3800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5e663b17a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f343d50dc50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4f39460278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f134d59b1d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb39d9067a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f15b269b800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f589e5fa638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fce4e345278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd9e2391c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f8f5f26db80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe25ab635e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f422a9f2b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4277e25278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f15cf3dccc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4b3873f1d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5651fa4638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f772c63d800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fdd553793a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f60eb230278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fba55fd66c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f95e332f5e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe9313e0b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc1829455e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ffd8f460cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f13080bdc50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ffca18dfb80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3a490b2c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbe814c9b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Timeout::Error: IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: IO timeout>
#<Timeout::Error: IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<EOFError: end of file reached>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
