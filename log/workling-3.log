# Logfile created on Thu Feb 03 22:34:07 -0500 2011 by /
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ENETUNREACH: Network is unreachable - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Timeout::Error: IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Too many connections>
#<Mysql::Error: Too many connections>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Rails::Info>
#<NameError: uninitialized constant HoptoadNotifier>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Access denied for user 'cacique'@'localhost' (using password: YES)>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Access denied for user 'cacique'@'localhost' (using password: YES)>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<Mysql::Error: Too many connections>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Base>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Discovery>
#<Gem::LoadError: Could not find RubyGem fiveruns-memcache-client (>= 0)
>
#<NameError: uninitialized constant Rails::Info>
#<SystemExit: exit>
#<Gem::LoadError: Could not find RubyGem hoptoad_notifier ()
>
#<NameError: uninitialized constant Workling::Base>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::ECONNREFUSED: Connection refused - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- xmlscan/scanner>
#<MissingSourceFile: no such file to load -- jira4r>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (113)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (113)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcb87a5dcf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4cf4879ce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f84dc4cdcf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f422de3d7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f843542ac00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fdca704d950>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f53bb17bb80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbca2f51278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe4895c4278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4bcc2647a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc6ab043278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4ca7501b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fecdc24e7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f6a29388c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4471992278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fba350071d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f79478d3cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fdc037b8c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f00d05a8cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ffe519a13a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f579c134c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f69f2dbfc50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f755f89cc00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f2ecbaac1d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7faabab8ec98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Errno::EHOSTUNREACH: No route to host - connect(2)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbc9d2907a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3ee0893cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa6c96a26c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f995e93fce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f6c6250f278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcfbc8cbcf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9c959accc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f36fb3fd278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7effe7ace7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f815241a278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f18a53dbc50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3f972f8c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f194c9607a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f71699bbcc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f977636bce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3f7d74c1d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4a51ef2278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f29176ecc00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f636622eb58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f128a352278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f08d237dcf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f28f7c61278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcbdb6fd278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb46c2c9cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f2968405b80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fac83d0e6c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f925b84ccc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f633f65c828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fba8e4e55e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f0d8fb5ecc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ffeba5d8278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa4cae06cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f00269dbcf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fad27b7f3a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f99a50491d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f91237cb800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc99ad79cc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f82e54ac828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb1d2da6cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f727c8c96f0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd76a9d8c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa494d7cc98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fcceadcd278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9415fafb80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f0acd623cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fdf44c38b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f27fadf91d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f92851ccb58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4e22dc4278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb899cc0c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5daf2477a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fc06525a828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f29c377b7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe968b3dce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f0326d93cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3d63b415e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f54a4ae9c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbf429551d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd8c8af57a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f960283bb80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7feeb671dcf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f326aafe6c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f5bfe2cb800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f89f214b3a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd333554c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f77646881d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f8828666b58>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f786d5c55e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f27c138d7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa4d06846c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f70813f27a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd74436d3a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa1603b0cc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f071d15e1d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f70047a3cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f6fd2ac35e8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f50968f7800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7feebd6491d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f0ac1f7b7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f4ec3f10c98>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa33730db80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f01cfaa1cc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe36af99c50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f09e47257a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3c11b7a828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fe1b200c6c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f8236caacc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fb1c9a01ce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f674ca161d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fa2a6de1278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f1e7c0a66c0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ffa9bbdc1d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff06c06c1d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbfe013c7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f2593cdccc8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7eff35b17cf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f1dd25521d8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f860780b3a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3d0e85dcf0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f48fdb3b800>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f7a1f872828>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fd2e56d3278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f41065cbb80>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f44331dbcc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f3d96fb9278>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f9b284bb7a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f1ee0a7dcc0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbc46b02638>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fbd9d7433a0>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7f1d8fd8dc50>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7ff51ed26c00>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: No active servers>
#<Timeout::Error: execution expired>
#<#<Class:0x7fabcdd87ce8>: execution expired>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: IO timeout>
#<Timeout::Error: IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::WorklingConnectionError: MemCache::MemCacheError - IO timeout>
#<MemCache::MemCacheError: IO timeout>
#<Timeout::Error: IO timeout>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: IO timeout>
#<Timeout::Error: IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<NameError: uninitialized constant Workling::Remote>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Mysql::Error: Can't connect to MySQL server on '10.4.0.30' (111)>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Errno::EAGAIN: Resource temporarily unavailable>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Routing>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: IO timeout>
#<Timeout::Error: IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<NameError: uninitialized constant Workling::Remote>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<MemCache::MemCacheError: IO timeout>
#<Timeout::Error: IO timeout>
#<Errno::EAGAIN: Resource temporarily unavailable>
#<Workling::QueueserverNotFoundError: config/workling.yml configured to connect to queue server on 10.4.0.30:22122 for this environment. could not connect to queue server on this host:port. for starling users: pass starling the port with -p flag when starting it. If you don't want to use Starling, then explicitly set Workling::Remote.dispatcher (see README for an example)>
#<NameError: uninitialized constant Workling::Remote::Invokers::ThreadedPoller>
#<NameError: uninitialized constant Workling::Remote::Invokers>
#<NameError: uninitialized constant Workling::Routing::ClassAndMethodRouting>
#<NameError: uninitialized constant Workling::Routing>
#<MissingSourceFile: no such file to load -- spawn>
#<NameError: uninitialized constant Workling::Remote>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- rails>
#<ArgumentError: couldn't find HOME environment -- expanding `~'>
#<MissingSourceFile: no such file to load -- commonwatir>
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- rails>
#<ArgumentError: couldn't find HOME environment -- expanding `~'>
#<MissingSourceFile: no such file to load -- commonwatir>
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- rails>
#<ArgumentError: couldn't find HOME environment -- expanding `~'>
#<MissingSourceFile: no such file to load -- commonwatir>
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- rails>
#<ArgumentError: couldn't find HOME environment -- expanding `~'>
#<MissingSourceFile: no such file to load -- commonwatir>
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find the most recent exception thrown, this will be likely (but not certainly) the exception that made the application exit abnormally ***
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
*** below you find all exception objects found in memory, some of them may have been thrown in your application, others may just be in memory because they are standard exceptions ***
#<NoMemoryError: failed to allocate memory>
#<SystemStackError: stack level too deep>
#<fatal: exception reentered>
#<MissingSourceFile: no such file to load -- rails>
#<ArgumentError: couldn't find HOME environment -- expanding `~'>
#<MissingSourceFile: no such file to load -- commonwatir>
#<MissingSourceFile: no such file to load -- encoding/character/utf-8>
